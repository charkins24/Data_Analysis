#scale_color_manual(values=c("#E27425",
#"#439539")) +
scale_fill_manual(values=c("#E27425",
"#439539")) +
scale_alpha_discrete(range = c(.3,.6)) +
facet_grid(MeasurementScale ~ Grade) +
theme_bw() +
theme(legend.position="bottom") +
ylab("Proportion of Students") +
xlab("RIT Score")
data_bp<-map_mv$mapData %>%
filter(Year2==2014:2015,
Season=="Fall",
Grade==5,
MeasurementScale!="General Science") %>%
mutate(GradeSeason=ifelse(Year2==2014,3,4))
data_bp<-map_mv$mapData %>%
filter(Year2==2014:2015,
Season=="Fall",
Grade==5,
MeasurementScale!="General Science") %>%
mutate(GradeSeason=ifelse(Year2==2014,3,4))
map_mv<-mapvizier(map_all)
data_bp<-map_mv$mapData %>%
filter(Year2==2014:2015,
Season=="Fall",
Grade==5,
MeasurementScale!="General Science") %>%
mutate(GradeSeason=ifelse(Year2==2014,3,4))
map_mv$mapData %>%
filter(Year2==2014:2015,
Season=="Fall",
Grade==5,
MeasurementScale!="General Science")
map_mv$mapData %>%
filter(Year2==c(2014:2015),
Season=="Fall",
Grade==5,
MeasurementScale!="General Science") %>%
mutate(GradeSeason=ifelse(Year2==2014,3,4))
map_mv$mapData %>%
filter(Year2==c(2014:2015),
Season=="Fall",
Grade==5,
MeasurementScale!="General Science")
require(dplyr)
map_mv$mapData %>%
filter(Year2==c(2014:2015),
Season=="Fall",
Grade==5,
MeasurementScale!="General Science")
data_bp<-map_mv$mapData %>%
filter(Year2 %in% c(2014,2015),
Season=="Fall",
Grade==5,
MeasurementScale!="General Science") %>%
mutate(GradeSeason=ifelse(Year2==2014,3,4))
data_fake_national<-data.frame(GradeSeason=rep(2, times=8),
MeasurementScale=c(rep("Mathematics", 4),
rep("Reading", 4)),
TestPercentile=rep(seq(24,100, by=25),2),
CohortYear=rep(2021, 8),
Year2=rep(2014,8),
DistrictName="National"
)
data_bp2<-rbind(data_bp %>% select(GradeSeason,
MeasurementScale,
TestPercentile,
CohortYear,
Year2,
DistrictName), data_fake_national)
p<-becca_plot(.data = as.data.frame(data_bp2),
grade_level_season_column="GradeSeason",
school_name_column="DistrictName",
cohort_name_column="CohortYear",
#academic_year_column="Year2",
measurement_scale_column="MeasurementScale",
#percentile_column="TestPercentile",
facets=". ~ MEASUREMENTSCALE",
justify_widths=T,
justify_min=1,
justify_max=5
#,
#first_and_spring_only=T
)
p<-becca_plot(.data = as.data.frame(data_bp2),
grade_level_season_column="GradeSeason",
school_name_column="DistrictName",
cohort_name_column="CohortYear",
academic_year_column="Year2",
measurement_scale_column="MeasurementScale",
#percentile_column="TestPercentile",
facets=". ~ MEASUREMENTSCALE",
justify_widths=T,
justify_min=1,
justify_max=5
#,
#first_and_spring_only=T
)
becca_plot
becca_plot(.data = as.data.frame(data_bp2),
grade_level_season_column="GradeSeason",
school_name_column="DistrictName",
cohort_name_column="CohortYear",
academic_year_column="Year2",
measurement_scale_column="MeasurementScale",
percentile_column="TestPercentile",
facets=". ~ MEASUREMENTSCALE",
justify_widths=T,
justify_min=1,
justify_max=5
#,
#first_and_spring_only=T
)
debugonce(becca_plot)
becca_plot(.data = as.data.frame(data_bp2),
grade_level_season_column="GradeSeason",
school_name_column="DistrictName",
cohort_name_column="CohortYear",
academic_year_column="Year2",
measurement_scale_column="MeasurementScale",
percentile_column="TestPercentile",
facets=". ~ MEASUREMENTSCALE",
justify_widths=T,
justify_min=1,
justify_max=5
#,
#first_and_spring_only=T
)
debugonce(becca_plot)
becca_plot(.data = as.data.frame(data_bp2),
grade_level_season_column="GradeSeason",
school_name_column="DistrictName",
cohort_name_column="CohortYear",
academic_year_column="Year2",
measurement_scale_column="MeasurementScale",
percentile_column="TestPercentile",
facets=". ~ MEASUREMENTSCALE",
justify_widths=T,
justify_min=1,
justify_max=5
#,
#first_and_spring_only=T
)
debugonce(becca_plot)
becca_plot(.data = as.data.frame(data_bp2),
grade_level_season_column="GradeSeason",
school_name_column="DistrictName",
cohort_name_column="CohortYear",
#academic_year_column="Year2",
measurement_scale_column="MeasurementScale",
#percentile_column="TestPercentile",
facets=". ~ MEASUREMENTSCALE",
justify_widths=T,
justify_min=1,
justify_max=5
#,
#first_and_spring_only=T
)
p<-becca_plot(.data = as.data.frame(data_bp2),
grade_level_season_column="GradeSeason",
school_name_column="DistrictName",
cohort_name_column="CohortYear",
academic_year_column="Year2",
measurement_scale_column="MeasurementScale",
test_percentile_column="TestPercentile",
facets=". ~ MEASUREMENTSCALE",
justify_widths=T,
justify_min=1,
justify_max=5
#,
#first_and_spring_only=T
)
p<-becca_plot(.data = as.data.frame(data_bp2),
grade_level_season_column="GradeSeason",
school_name_column="DistrictName",
cohort_name_column="CohortYear",
#academic_year_column="Year2",
measurement_scale_column="MeasurementScale",
test_percentile_column="TestPercentile",
facets=". ~ MEASUREMENTSCALE",
justify_widths=T,
justify_min=1,
justify_max=5
#,
#first_and_spring_only=T
)
debugonce(becca_plot)
p<-becca_plot(.data = as.data.frame(data_bp2),
grade_level_season_column="GradeSeason",
school_name_column="DistrictName",
cohort_name_column="CohortYear",
#academic_year_column="Year2",
measurement_scale_column="MeasurementScale",
test_percentile_column="TestPercentile",
facets=". ~ MEASUREMENTSCALE",
justify_widths=T,
justify_min=1,
justify_max=5
#,
#first_and_spring_only=T
)
debugonce(becca_plot)
p<-becca_plot(.data = as.data.frame(data_bp2),
grade_level_season_column="GradeSeason",
school_name_column="DistrictName",
cohort_name_column="CohortYear",
#academic_year_column="Year2",
measurement_scale_column="MeasurementScale",
test_percentile_column="TestPercentile",
facets=". ~ MEASUREMENTSCALE",
justify_widths=T,
justify_min=1,
justify_max=5
#,
#first_and_spring_only=T
)
setwd("~/Dropbox (KIPP Chicago Schools)/dev/R/MAP-visuals")
dev_mode()
require(devtools)
dev_mode()
load_all()
debugonce(becca_plot)
p<-becca_plot(.data = as.data.frame(data_bp2),
grade_level_season_column="GradeSeason",
school_name_column="DistrictName",
cohort_name_column="CohortYear",
#academic_year_column="Year2",
measurement_scale_column="MeasurementScale",
test_percentile_column="TestPercentile",
facets=". ~ MEASUREMENTSCALE",
justify_widths=T,
justify_min=1,
justify_max=5
#,
#first_and_spring_only=T
)
debugonce(becca_plot)
p<-becca_plot(.data = as.data.frame(data_bp2),
grade_level_season_column="GradeSeason",
school_name_column="DistrictName",
cohort_name_column="CohortYear",
#academic_year_column="Year2",
measurement_scale_column="MeasurementScale",
test_percentile_column="TestPercentile",
facets=". ~ MEASUREMENTSCALE",
justify_widths=T,
justify_min=1,
justify_max=5
#,
#first_and_spring_only=T
)
summarize(
by_grade_season
,n=n()
)
dplyr::summarize(
by_grade_season
,n=n()
)
load_all()
p<-becca_plot(.data = as.data.frame(data_bp2),
grade_level_season_column="GradeSeason",
school_name_column="DistrictName",
cohort_name_column="CohortYear",
#academic_year_column="Year2",
measurement_scale_column="MeasurementScale",
test_percentile_column="TestPercentile",
facets=". ~ MEASUREMENTSCALE",
justify_widths=T,
justify_min=1,
justify_max=5
#,
#first_and_spring_only=T
)
p
document()
document()
p<-becca_plot(.data = as.data.frame(data_bp2),
grade_level_season_column="GradeSeason",
school_name_column="DistrictName",
cohort_name_column="CohortYear",
#academic_year_column="Year2",
measurement_scale_column="MeasurementScale",
test_percentile_column="TestPercentile",
facets=". ~ MEASUREMENTSCALE",
justify_widths=T,
justify_min=1,
justify_max=5
#,
#first_and_spring_only=T
)
p<-becca_plot(.data = as.data.frame(data_bp2),
grade_level_season_column="GradeSeason",
school_name_column="DistrictName",
cohort_name_column="CohortYear",
#academic_year_column="Year2",
measurement_scale_column="MeasurementScale",
test_percentile_column="TestPercentile",
facets=". ~ MEASUREMENTSCALE",
justify_widths=T,
justify_min=1,
justify_max=5
#,
#first_and_spring_only=T
)
p<-becca_plot(.data = as.data.frame(data_bp2),
grade_level_season_column="GradeSeason",
school_name_column="DistrictName",
cohort_name_column="CohortYear",
#academic_year_column="Year2",
measurement_scale_column="MeasurementScale",
test_percentile_column="TestPercentile",
facets=". ~ MEASUREMENTSCALE",
justify_widths=T,
justify_min=1,
justify_max=5
#,
#first_and_spring_only=T
)
document()
p<-becca_plot(.data = as.data.frame(data_bp2),
grade_level_season_column="GradeSeason",
school_name_column="DistrictName",
cohort_name_column="CohortYear",
#academic_year_column="Year2",
measurement_scale_column="MeasurementScale",
test_percentile_column="TestPercentile",
facets=". ~ MEASUREMENTSCALE",
justify_widths=T,
justify_min=1,
justify_max=5
#,
#first_and_spring_only=T
)
p
dev_mode()
setwd("~/Dropbox (KIPP Chicago Schools)/Data Analysis/MAP Analysis/2014-2015")
install_github("almartin82/MAP-visuals")
require(RODBC)
install.packages('RODBC')
require(RODBC)
require(RJDBC)
drvr <- JDBC('com.microsoft.sqlserver.jdbc.SQLServerDriver',
'~/Dropbox (KIPP Chicago Schools)/JDBC Drivers/sqljdbc_4.0/enu//sqljdbc4.jar')
conn <- dbConnect(drvr,
server = paste0("jdbc:sqlserver://", ipaddress),
port = port,
uid = user,
pwd = pwd
)
conn <- dbConnect(drvr,
url = paste0("jdbc:sqlserver://", ipaddress),
port = port,
uid = user,
pwd = pwd
)
ipaddress<-"10.80.30.161"
port<-"1433"
user <- "silo"
pwd <- "silKIPP1"
conn <- dbConnect(drvr,
url = paste0("jdbc:sqlserver://", ipaddress),
port = port,
uid = user,
pwd = pwd
)
conn <- dbConnect(drvr,
url = paste0("jdbc:sqlserver://", "54.172.135.0"),
port = port,
uid = "chaid",
pwd = "haiKIPP1"
)
conn <- dbConnect(drvr,
server = paste0("jdbc:sqlserver://", ipaddress, ":", port, "silo"),
uid = "chaid",
pwd = "haiKIPP1"
)
conn <- dbConnect(drvr,
url = paste0("jdbc:sqlserver://", ipaddress, ":", port, "silo"),
uid = "chaid",
pwd = "haiKIPP1"
)
conn <- dbConnect(drvr,
url = paste0("jdbc:sqlserver://", ipaddress, ":", port,":", "silo"),
uid = "chaid",
pwd = "haiKIPP1"
)
conn <- dbConnect(drvr,
url = paste0("jdbc:sqlserver://", ipaddress, ":", port),
uid = "chaid",
pwd = "haiKIPP1"
)
ipaddress<-"54.172.135.22"
ipaddress<-"54.172.135.22"
conn <- dbConnect(drvr,
url = paste0("jdbc:sqlserver://", ipaddress, ":", port),
uid = "chaid",
pwd = "haiKIPP1"
)
conn <- dbConnect(drvr,
url = paste0("jdbc:sqlserver://", ipaddress, ":", port),
uid = "silo",
pwd = "silKIPP1"
)
conn <- dbConnect(drvr,
url = paste0("jdbc:sqlserver://", ipaddress, ":", port),
user = "silo",
pwd = "silKIPP1"
)
conn <- dbConnect(drvr,
url = paste0("jdbc:sqlserver://", ipaddress, ":", port),
user = "chaid",
pwd = "haiKIPP1"
)
conn <- dbConnect(drvr,
url = "jdbc:sqlserver://54.172.135.22:1433",
user = "chaid",
pwd = "haiKIPP1"
)
conn <- dbConnect(drvr,
url = "jdbc:sqlserver://54.172.135.22:1433",
user = "chaid",
pwd = "haiKIPP1"
)
conn <- dbConnect(drvr,
url = "jdbc:sqlserver://54.172.135.22:1433",
user = "chaid",
pwd = "haiKIPP1"
)
source('~/.active-rstudio-document', echo=TRUE)
drvr <- JDBC('com.microsoft.sqlserver.jdbc.SQLServerDriver',
'~/Dropbox (KIPP Chicago Schools)/JDBC Drivers/sqljdbc_4.0/enu//sqljdbc4.jar')
conn <- dbConnect(drvr,
url = "jdbc:sqlserver://54.172.135.22:1433",
user = "chaid",
pwd = "haiKIPP1"
)
conn <- dbConnect(drvr,
url = "jdbc:sqlserver://54.172.135.22:1433",
user = "chaid",
pwd = "haiKIPP1"
)
conn <- dbConnect(drvr,
url = "jdbc:sqlserver://54.172.135.22:1433",
user = "test",
pwd = "haiKIPP1"
)
conn <- dbConnect(drvr,
url = "jdbc:sqlserver://54.172.11.151:1433",
user = "chaid",
pwd = "haiKIPP1"
)
drvr <- JDBC('com.microsoft.sqlserver.jdbc.SQLServerDriver',
'~/Dropbox (KIPP Chicago Schools)/JDBC Drivers/sqljdbc_4.0/enu//sqljdbc4.jar')
conn <- dbConnect(drvr,
url = "jdbc:sqlserver://54.172.11.151:1433",
user = "chaid",
pwd = "haiKIPP1"
)
conn <- dbConnect(drvr,
server = "jdbc:sqlserver://54.172.11.151:1433",
uid = "chaid",
pwd = "haiKIPP1"
)
conn <- dbConnect(drvr,
"jdbc:sqlserver://54.172.11.151:1433",
"chaid",
"haiKIPP1"
)
conn <- dbConnect(drvr,
url="jdbc:sqlserver://54.172.11.151:1433",
user="chaid",
password="haiKIPP1"
)
sutdents<-dbGetQuery("Select *
FROM
OPENQUERY(PS_CHI, 'SELECT studennt_number
FROM   students
WHERE  enroll_status=0
AND    grade_level=8')")
sutdents<-dbGetQuery(conn,"Select *
FROM
OPENQUERY(PS_CHI, 'SELECT studennt_number
FROM   students
WHERE  enroll_status=0
AND    grade_level=8')")
sutdents<-dbGetQuery(conn,
"SELECT *
FROM
OPENQUERY(PS_CHI, 'SELECT student_number
FROM   students
WHERE  enroll_status=0
AND    grade_level=8')")
View(sutdents)
View(sutdents)
?dbGetQuery,JDBCConnection,character-method
?dbGetQuery
?dbConnect
dbDisconnect(conn)
conn <- dbConnect(drvr,
url="jdbc:sqlserver://54.172.11.151:1433",
user="silo",
password="silKIPP1"
)
sutdents<-dbGetQuery(conn,
"SELECT *
FROM
OPENQUERY(PS_CHI, 'SELECT student_number
FROM   students
WHERE  enroll_status=0
AND    grade_level=8')")
